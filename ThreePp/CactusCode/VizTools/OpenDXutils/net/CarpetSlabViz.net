//
// time: Mon Jun 21 09:30:21 2004
//
// version: 3.2.0 (format), 4.3.0 (DX)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This example shows volume rendering. The Colormap Editor and the Color module are used to color the volume.  Press Execute on Change in the Execute menu.  You can change the colormap by double-clicking on the Colormap tool and experimenting with adding new control points or moving the control points which are already present. The Colormap editor is "data-driven", which means that its limits are derived from the data itself.
// comment: 
// comment: By using the selector interactor in the control panel, you can see how AutoColor may also be used to color objects for volume rendering.
// comment: 
// comment: The colormap used to color the volume is displayed as a color bar in the image window.
// comment: 
// comment: This example uses a "dots" rendering approximation if you rotate the object while in execute-on-change mode. You can find this option under "Rendering Options" in the "Options" menu of the Image window.
// comment: 
// comment: The intent of this network is to demostrate software volume rendering.  Execution of this network using hardware rendering will result in an approximation of software rendering results.  You will find more information on the differences between software and hardware volume rendering in the IBM Visualization Data Explorer User's Reference.
// page assignment: Slab Viz	order=2, windowed=0, showing=1
// workspace: width = 637, height = 587
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 1, y = 37, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "../data/phi-Carpet_3levels.h5"
    // output[2]: visible = 0, type = 32, value = "phi-Carpet_3levels.h5"
    // page group: Slab Viz
    //
    // 
    // node SelectorList[1]: x = 183, y = 38, inputs = 7, label = SelectorList
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "SelectorList_1"
    // input[2]: defaulting = 0, visible = 0, type = 16777248, value = { "0" "1" "2" }
    // input[3]: defaulting = 0, visible = 0, type = 16777245, value = { 0 1 2 }
    // input[4]: defaulting = 1, visible = 0, type = 16777248, value = { "0" "1" "2" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2}
    // output[1]: visible = 1, type = 16777245, value = { 0 1 2 }
    // output[2]: visible = 0, type = 16777248, value = { "0" "1" "2" }
    // page group: Slab Viz
    //
    // 
    // node GetGlobal[1]: x = 509, y = 31, inputs = 3, label = GetGlobal
    // input[1]: visible = 0
    // input[2]: visible = 0
    // page group: Slab Viz
    //
main_GetGlobal_1_out_1,
main_GetGlobal_1_out_2 = 
    GetGlobal(
    main_GetGlobal_1_in_1,
    main_GetGlobal_1_in_2,
    main_GetGlobal_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Sequencer[2]: x = 419, y = 31, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 24
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 24 1 0 24 1 }
    // page group: Slab Viz
    // vcr[2]: min = 0, max = 24, beg = 0, end = 24, cur = 1, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.0086,0.5638), size = 0.2000x0.0762
    //
    main_Sequencer_2_in_3 = @frame;
main_Sequencer_2_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_2_in_1,
    main_Sequencer_2_in_2,
    main_Sequencer_2_in_3,
    main_Sequencer_2_in_4,
    main_GetGlobal_1_out_1,
    main_Sequencer_2_in_6,
    main_Sequencer_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node ImportCarpetHDF5[1]: x = 238, y = 119, inputs = 11, label = ImportCarpetHDF5
    // input[2]: defaulting = 0, visible = 0, type = 16777217, value = {0,48,0}
    // input[3]: defaulting = 0, visible = 0, type = 16777217, value = {0,1,0}
    // input[4]: visible = 0
    // page group: Slab Viz
    //
main_ImportCarpetHDF5_1_out_1,
main_ImportCarpetHDF5_1_out_2,
main_ImportCarpetHDF5_1_out_3 = 
    ImportCarpetHDF5(
    main_FileSelector_1_out_1,
    main_ImportCarpetHDF5_1_in_2,
    main_ImportCarpetHDF5_1_in_3,
    main_ImportCarpetHDF5_1_in_4,
    main_SelectorList_1_out_1,
    main_Sequencer_2_out_1,
    main_ImportCarpetHDF5_1_in_7,
    main_ImportCarpetHDF5_1_in_8,
    main_ImportCarpetHDF5_1_in_9,
    main_ImportCarpetHDF5_1_in_10,
    main_ImportCarpetHDF5_1_in_11
    ) [instance: 1, cache: 1];
    // 
    // node Attribute[1]: x = 557, y = 220, inputs = 2, label = Attribute
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "time"
    // page group: Slab Viz
    //
main_Attribute_1_out_1 = 
    Attribute(
    main_ImportCarpetHDF5_1_out_1,
    main_Attribute_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Integer[1]: x = 110, y = 37, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 32 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 79
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 32 
    // page group: Slab Viz
    //
    // 
    // node ImportCarpetHDF5[2]: x = 68, y = 119, inputs = 11, label = ImportCarpetHDF5
    // input[2]: defaulting = 1, visible = 1, type = 16777217, value = {80,0,0}
    // input[3]: defaulting = 0, visible = 0, type = 16777217, value = {1,0,0}
    // input[4]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: Slab Viz
    //
main_ImportCarpetHDF5_2_out_1,
main_ImportCarpetHDF5_2_out_2,
main_ImportCarpetHDF5_2_out_3 = 
    ImportCarpetHDF5(
    main_FileSelector_1_out_1,
    main_Integer_1_out_1,
    main_ImportCarpetHDF5_2_in_3,
    main_ImportCarpetHDF5_2_in_4,
    main_SelectorList_1_out_1,
    main_Sequencer_2_out_1,
    main_ImportCarpetHDF5_2_in_7,
    main_ImportCarpetHDF5_2_in_8,
    main_ImportCarpetHDF5_2_in_9,
    main_ImportCarpetHDF5_2_in_10,
    main_ImportCarpetHDF5_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node RubberSheet[2]: x = 87, y = 220, inputs = 4, label = RubberSheet
    // input[2]: visible = 0
    // page group: Slab Viz
    //
main_RubberSheet_2_out_1 = 
    RubberSheet(
    main_ImportCarpetHDF5_2_out_1,
    main_RubberSheet_2_in_2,
    main_RubberSheet_2_in_3,
    main_RubberSheet_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node ShowConnections[3]: x = 5, y = 299, inputs = 1, label = ShowConnections
    // page group: Slab Viz
    //
main_ShowConnections_3_out_1 = 
    ShowConnections(
    main_RubberSheet_2_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Collect[2]: x = 110, y = 374, inputs = 4, label = Collect
    // input[1]: visible = 0
    // page group: Slab Viz
    //
main_Collect_2_out_1 = 
    Collect(
    main_Collect_2_in_1,
    main_ShowConnections_3_out_1,
    main_RubberSheet_2_out_1,
    main_ImportCarpetHDF5_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node AutoColor[9]: x = 107, y = 439, inputs = 10, label = AutoColor
    // input[7]: visible = 0
    // output[2]: visible = 0
    // page group: Slab Viz
    //
main_AutoColor_9_out_1,
main_AutoColor_9_out_2 = 
    AutoColor(
    main_Collect_2_out_1,
    main_AutoColor_9_in_2,
    main_AutoColor_9_in_3,
    main_AutoColor_9_in_4,
    main_AutoColor_9_in_5,
    main_AutoColor_9_in_6,
    main_AutoColor_9_in_7,
    main_AutoColor_9_in_8,
    main_AutoColor_9_in_9,
    main_AutoColor_9_in_10
    ) [instance: 9, cache: 1];
    // 
    // node Format[1]: x = 482, y = 220, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "phi at T=%.2fM"
    // input[3]: visible = 0
    // page group: Slab Viz
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Attribute_1_out_1,
    main_Format_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Caption[1]: x = 401, y = 220, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 0, type = 8, value = [.05 .05]
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 20
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "italic_t"
    // page group: Slab Viz
    //
main_Caption_1_out_1 = 
    Caption(
    main_Format_1_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[1]: x = 194, y = 303, inputs = 1, label = ShowConnections
    // page group: Slab Viz
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_ImportCarpetHDF5_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 273, y = 455, inputs = 4, label = Collect
    // page group: Slab Viz
    //
main_Collect_1_out_1 = 
    Collect(
    main_AutoColor_9_out_1,
    main_ShowConnections_1_out_1,
    main_ImportCarpetHDF5_1_out_2,
    main_Caption_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[5]: x = 298, y = 525, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_5"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0 0 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [2.44166 -3.41464 1.0593]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.413
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.754
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.203638 0.154314 0.966808]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 5.46157
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: Slab Viz
    // depth: value = 16
    // window: position = (0.4721,0.2476), size = 0.4671x0.4990
    // internal caching: 1
    //
main_Image_5_out_1,
main_Image_5_out_2,
main_Image_5_out_3 = 
    Image(
    main_Image_5_in_1,
    main_Collect_1_out_1,
    main_Image_5_in_3,
    main_Image_5_in_4,
    main_Image_5_in_5,
    main_Image_5_in_6,
    main_Image_5_in_7,
    main_Image_5_in_8,
    main_Image_5_in_9,
    main_Image_5_in_10,
    main_Image_5_in_11,
    main_Image_5_in_12,
    main_Image_5_in_13,
    main_Image_5_in_14,
    main_Image_5_in_15,
    main_Image_5_in_16,
    main_Image_5_in_17,
    main_Image_5_in_18,
    main_Image_5_in_19,
    main_Image_5_in_20,
    main_Image_5_in_21,
    main_Image_5_in_22,
    main_Image_5_in_23,
    main_Image_5_in_24,
    main_Image_5_in_25,
    main_Image_5_in_26,
    main_Image_5_in_27,
    main_Image_5_in_28,
    main_Image_5_in_29,
    main_Image_5_in_30,
    main_Image_5_in_31,
    main_Image_5_in_32,
    main_Image_5_in_33,
    main_Image_5_in_34,
    main_Image_5_in_35,
    main_Image_5_in_36,
    main_Image_5_in_37,
    main_Image_5_in_38,
    main_Image_5_in_39,
    main_Image_5_in_40,
    main_Image_5_in_41,
    main_Image_5_in_42,
    main_Image_5_in_43,
    main_Image_5_in_44,
    main_Image_5_in_45,
    main_Image_5_in_46,
    main_Image_5_in_47,
    main_Image_5_in_48,
    main_Image_5_in_49
    ) [instance: 5, cache: 1];
    // 
    // node SetGlobal[1]: x = 510, y = 111, inputs = 3, label = SetGlobal
    // page group: Slab Viz
    //
    SetGlobal(
    main_ImportCarpetHDF5_1_out_3,
    main_GetGlobal_1_out_2,
    main_SetGlobal_1_in_3
    ) [instance: 1, cache: 1];
    //
    // decorator Annotate	pos=(426,0) size=143x28 style(Label), value = <NULL>
    // annotation user_begin: 18
    // annotation user: Timestep Selection
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#1340b3
    // page group: Slab Viz
    //
    // decorator Annotate	pos=(65,5) size=93x28 style(Label), value = <NULL>
    // annotation user_begin: 11
    // annotation user: Data Import
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#1340b3
    // page group: Slab Viz
    //
    // decorator Annotate	pos=(0,229) size=85x44 style(Label), value = <NULL>
    // annotation user_begin: 15
    // annotation user: Image
    // annotation user: Rendering
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#1340b3
    // page group: Slab Viz
    //
    // decorator Annotate	pos=(478,189) size=67x28 style(Label), value = <NULL>
    // annotation user_begin: 7
    // annotation user: Caption
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#1340b3
    // page group: Slab Viz
    //
    // decorator Annotate	pos=(187,540) size=109x28 style(Label), value = <NULL>
    // annotation user_begin: 13
    // annotation user: Display Image
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#1340b3
    // page group: Slab Viz
    //
    // decorator Annotate	pos=(397,414) size=240x117 style(Label), font=big_oblique, value = <NULL>
    // annotation user_begin: 103
    // annotation user: Double-click on Integer
    // annotation user: to slice through x-plane
    // annotation user: <NULL>
    // annotation user: Double-click on Sequencer
    // annotation user: to browse through timesteps
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#b30000
    // resource *decorator.alignment:XmALIGNMENT_BEGINNING
    // page group: Slab Viz
// network: end of macro body
CacheScene(main_Image_5_in_1, main_Image_5_out_1, main_Image_5_out_2);
}
main_FileSelector_1_out_1 = "../data/phi-Carpet_3levels.h5";
main_SelectorList_1_in_1 = "SelectorList_1";
main_SelectorList_1_in_2 = { "0" "1" "2" };
main_SelectorList_1_in_3 = { 0 1 2 };
main_SelectorList_1_in_4 = NULL;
main_SelectorList_1_in_5 = NULL;
main_SelectorList_1_in_6 = NULL;
main_SelectorList_1_in_7 = NULL;
main_SelectorList_1_out_1 = { 0 1 2 };
main_GetGlobal_1_in_1 = NULL;
main_GetGlobal_1_in_2 = NULL;
main_GetGlobal_1_in_3 = NULL;
main_GetGlobal_1_out_1 = NULL;
main_GetGlobal_1_out_2 = NULL;
main_Sequencer_2_in_1 = "Sequencer_2";
main_Sequencer_2_in_2 = NULL;
main_Sequencer_2_in_3 = NULL;
main_Sequencer_2_in_4 = 0;
main_Sequencer_2_in_6 = 1;
main_Sequencer_2_in_7 = { 0 24 1 0 24 1 };
main_Sequencer_2_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 24;
@deltaframe = 1;
main_ImportCarpetHDF5_1_in_2 = {0,48,0};
main_ImportCarpetHDF5_1_in_3 = {0,1,0};
main_ImportCarpetHDF5_1_in_4 = NULL;
main_ImportCarpetHDF5_1_in_7 = NULL;
main_ImportCarpetHDF5_1_in_8 = NULL;
main_ImportCarpetHDF5_1_in_9 = NULL;
main_ImportCarpetHDF5_1_in_10 = NULL;
main_ImportCarpetHDF5_1_in_11 = NULL;
main_ImportCarpetHDF5_1_out_1 = NULL;
main_ImportCarpetHDF5_1_out_2 = NULL;
main_ImportCarpetHDF5_1_out_3 = NULL;
main_Attribute_1_in_2 = "time";
main_Attribute_1_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 32 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 32 ;
main_ImportCarpetHDF5_2_in_3 = {1,0,0};
main_ImportCarpetHDF5_2_in_4 = NULL;
main_ImportCarpetHDF5_2_in_7 = NULL;
main_ImportCarpetHDF5_2_in_8 = NULL;
main_ImportCarpetHDF5_2_in_9 = NULL;
main_ImportCarpetHDF5_2_in_10 = NULL;
main_ImportCarpetHDF5_2_in_11 = NULL;
main_ImportCarpetHDF5_2_out_1 = NULL;
main_RubberSheet_2_in_2 = NULL;
main_RubberSheet_2_in_3 = NULL;
main_RubberSheet_2_in_4 = NULL;
main_RubberSheet_2_out_1 = NULL;
main_ShowConnections_3_out_1 = NULL;
main_Collect_2_in_1 = NULL;
main_Collect_2_out_1 = NULL;
main_AutoColor_9_in_2 = NULL;
main_AutoColor_9_in_3 = NULL;
main_AutoColor_9_in_4 = NULL;
main_AutoColor_9_in_5 = NULL;
main_AutoColor_9_in_6 = NULL;
main_AutoColor_9_in_7 = NULL;
main_AutoColor_9_in_8 = NULL;
main_AutoColor_9_in_9 = NULL;
main_AutoColor_9_in_10 = NULL;
main_AutoColor_9_out_1 = NULL;
main_Format_1_in_1 = "phi at T=%.2fM";
main_Format_1_in_3 = NULL;
main_Format_1_out_1 = NULL;
main_Caption_1_in_2 = [.05 .05];
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = 20;
main_Caption_1_in_7 = "italic_t";
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_5_in_1 = "Image_5";
main_Image_5_in_3 = "X16,,";
main_Image_5_in_4 = 1;
main_Image_5_in_5 = [0 0 0];
main_Image_5_in_6 = [2.44166 -3.41464 1.0593];
main_Image_5_in_7 = 0.413;
main_Image_5_in_8 = 640;
main_Image_5_in_9 = 0.754;
main_Image_5_in_10 = [-0.203638 0.154314 0.966808];
main_Image_5_in_11 = NULL;
main_Image_5_in_12 = 0;
main_Image_5_in_13 = NULL;
main_Image_5_in_14 = 1;
main_Image_5_in_15 = NULL;
main_Image_5_in_16 = NULL;
main_Image_5_in_17 = NULL;
main_Image_5_in_18 = NULL;
main_Image_5_in_19 = 0;
main_Image_5_in_20 = NULL;
main_Image_5_in_21 = NULL;
main_Image_5_in_22 = NULL;
main_Image_5_in_23 = NULL;
main_Image_5_in_25 = NULL;
main_Image_5_in_26 = "tiff";
main_Image_5_in_27 = NULL;
main_Image_5_in_28 = NULL;
main_Image_5_in_29 = NULL;
main_Image_5_in_30 = NULL;
main_Image_5_in_31 = NULL;
main_Image_5_in_32 = NULL;
main_Image_5_in_33 = NULL;
main_Image_5_in_34 = NULL;
main_Image_5_in_35 = NULL;
main_Image_5_in_36 = NULL;
main_Image_5_in_37 = NULL;
main_Image_5_in_38 = NULL;
main_Image_5_in_39 = NULL;
main_Image_5_in_40 = NULL;
main_Image_5_in_41 = "rotate";
main_Image_5_in_42 = NULL;
main_Image_5_in_43 = NULL;
main_Image_5_in_44 = NULL;
main_Image_5_in_45 = NULL;
main_Image_5_in_46 = NULL;
main_Image_5_in_47 = NULL;
main_Image_5_in_48 = NULL;
main_Image_5_in_49 = NULL;
main_SetGlobal_1_in_3 = NULL;
Executive("product version 4 3 0");
$sync

sequence main();
play;
