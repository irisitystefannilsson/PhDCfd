//
// time: Mon Aug  5 11:46:40 2002
//
// version: 3.1.2 (format), 4.1.3 (DX)
//
//
// Begin MDF
// MODULE DoubleAdder
// CATEGORY Macros
// DESCRIPTION new macro
// INPUT input_1; value list or field or string or string list; (no default);  
// INPUT input_2; value list or field or string or string list; (no default);  
// INPUT input_3; value list or field or string or string list; (no default);  
// INPUT input_4; value list or field or string or string list; (no default);  
// OUTPUT output_1; value or value list or field;  
// OUTPUT output_2; value or value list or field;  
// End MDF
// workspace: width = 318, height = 327
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro DoubleAdder(
 input_1
,input_2
,input_3
,input_4
) -> (
 output_1
,output_2
) {
    // 
    // node Input[29]: x = 0, y = 0, inputs = 0, label = Input
    // parameter: position = 1, name = 'input_1', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
DoubleAdder_Input_29_out_1 = input_1;
    // 
    // node Input[31]: x = 208, y = 1, inputs = 0, label = Input
    // parameter: position = 3, name = 'input_3', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
DoubleAdder_Input_31_out_1 = input_3;
    // 
    // node Input[32]: x = 276, y = 6, inputs = 0, label = Input
    // parameter: position = 4, name = 'input_4', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
DoubleAdder_Input_32_out_1 = input_4;
    // 
    // node Compute[20]: x = 66, y = 130, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+$1*$2"
    // expression: value = a+b*c
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
DoubleAdder_Compute_20_out_1 = 
    Compute(
    "$0+$1*$2",
    DoubleAdder_Input_29_out_1,
    DoubleAdder_Input_31_out_1,
    DoubleAdder_Input_32_out_1
    ) [instance: 20, cache: 1];
    // 
    // node Input[30]: x = 62, y = 0, inputs = 0, label = Input
    // parameter: position = 2, name = 'input_2', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
DoubleAdder_Input_30_out_1 = input_2;
    // 
    // node Compute[21]: x = 217, y = 125, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+$1*$2"
    // expression: value = a+b*c
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
DoubleAdder_Compute_21_out_1 = 
    Compute(
    "$0+$1*$2",
    DoubleAdder_Input_30_out_1,
    DoubleAdder_Input_31_out_1,
    DoubleAdder_Input_32_out_1
    ) [instance: 21, cache: 1];
    // 
    // node Output[8]: x = 79, y = 265, inputs = 1, label = Output
    // parameter: position = 1, name = 'output_1', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
output_1 = DoubleAdder_Compute_20_out_1;
    // 
    // node Output[9]: x = 217, y = 251, inputs = 1, label = Output
    // parameter: position = 2, name = 'output_2', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
output_2 = DoubleAdder_Compute_21_out_1;
// network: end of macro body
}
DoubleAdder_Input_29_out_1 = NULL;
DoubleAdder_Input_31_out_1 = NULL;
DoubleAdder_Input_32_out_1 = NULL;
DoubleAdder_Compute_20_out_1 = NULL;
DoubleAdder_Input_30_out_1 = NULL;
DoubleAdder_Compute_21_out_1 = NULL;
