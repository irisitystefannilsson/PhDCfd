//
// time: Mon Apr 26 15:12:53 2004
//
// version: 3.2.0 (format), 4.3.0 (DX)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This example shows volume rendering. The Colormap Editor and the Color module are used to color the volume.  Press Execute on Change in the Execute menu.  You can change the colormap by double-clicking on the Colormap tool and experimenting with adding new control points or moving the control points which are already present. The Colormap editor is "data-driven", which means that its limits are derived from the data itself.
// comment: 
// comment: By using the selector interactor in the control panel, you can see how AutoColor may also be used to color objects for volume rendering.
// comment: 
// comment: The colormap used to color the volume is displayed as a color bar in the image window.
// comment: 
// comment: This example uses a "dots" rendering approximation if you rotate the object while in execute-on-change mode. You can find this option under "Rendering Options" in the "Options" menu of the Image window.
// comment: 
// comment: The intent of this network is to demostrate software volume rendering.  Execution of this network using hardware rendering will result in an approximation of software rendering results.  You will find more information on the differences between software and hardware volume rendering in the IBM Visualization Data Explorer User's Reference.
// page assignment: IsoSurface	order=7, windowed=0, showing=0
// page assignment: RenAutoColor	order=9, windowed=0, showing=0
// page assignment: RenColor	order=8, windowed=0, showing=0
// page assignment: choice	order=10, windowed=0, showing=0
// page assignment: colorbar	order=11, windowed=0, showing=0
// page assignment: image	order=12, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: minxmax	order=3, windowed=0, showing=0
// page assignment: slab_extract	order=5, windowed=0, showing=0
// page assignment: slab_geo	order=4, windowed=0, showing=0
// page assignment: slab_viz	order=6, windowed=0, showing=0
// workspace: width = 336, height = 550
// layout: snap = 1, width = 50, height = 50, align = LL
//
macro main(
) -> (
) {
    // 
    // node String[1]: x = 100, y = 0, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "localhost:8000"
    // page group: import
    //
    // 
    // node ImportHDF5[2]: x = 50, y = 88, inputs = 11, label = ImportHDF5
    // input[2]: visible = 0
    // input[3]: visible = 0
    // input[4]: visible = 0
    // input[5]: visible = 0
    // input[6]: defaulting = 0, visible = 0, type = 3, value = 1
    // output[2]: visible = 0
    // page group: import
    //
main_ImportHDF5_2_out_1,
main_ImportHDF5_2_out_2 = 
    ImportHDF5(
    main_String_1_out_1,
    main_ImportHDF5_2_in_2,
    main_ImportHDF5_2_in_3,
    main_ImportHDF5_2_in_4,
    main_ImportHDF5_2_in_5,
    main_ImportHDF5_2_in_6,
    main_ImportHDF5_2_in_7,
    main_ImportHDF5_2_in_8,
    main_ImportHDF5_2_in_9,
    main_ImportHDF5_2_in_10,
    main_ImportHDF5_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Integer[1]: x = 200, y = 0, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 10
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: import
    //
    // 
    // node Reduce[1]: x = 100, y = 188, inputs = 2, label = Reduce
    // input[2]: defaulting = 1, visible = 1, type = 16777221, value = { 3.0 }
    // page group: import
    //
main_Reduce_1_out_1 = 
    Reduce(
    main_ImportHDF5_2_out_1,
    main_Integer_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[6]: x = 50, y = 488, inputs = 1, label = data
    // page group: import
    //
data = main_Reduce_1_out_1;
    // 
    // node Receiver[11]: x = 150, y = 38, inputs = 1, label = data
    // page group: RenAutoColor
    //
main_Receiver_11_out_1[cache: 0] = data;
    // 
    // node Reset[2]: x = 350, y = 0, inputs = 6, label = Reset First Min/Max
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "main_Reset_2_out_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: minxmax
    // toggle : 0
    //
    // 
    // node GetGlobal[4]: x = 450, y = 138, inputs = 3, label = GetGlobal
    // input[1]: visible = 0
    // input[2]: defaulting = 1, visible = 1, type = 3, value = NULL
    // page group: minxmax
    //
main_GetGlobal_4_out_1,
main_GetGlobal_4_out_2 = 
    GetGlobal(
    main_GetGlobal_4_in_1,
    main_Reset_2_out_1,
    main_GetGlobal_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[5]: x = 350, y = 438, inputs = 1, label = min
    // page group: minxmax
    //
min = main_GetGlobal_4_out_1;
    // 
    // node Receiver[18]: x = 250, y = 38, inputs = 1, label = min
    // page group: RenAutoColor
    //
main_Receiver_18_out_1[cache: 0] = min;
    // 
    // node GetGlobal[3]: x = 200, y = 138, inputs = 3, label = GetGlobal
    // input[1]: visible = 0
    // input[2]: defaulting = 1, visible = 1, type = 3, value = NULL
    // page group: minxmax
    //
main_GetGlobal_3_out_1,
main_GetGlobal_3_out_2 = 
    GetGlobal(
    main_GetGlobal_3_in_1,
    main_Reset_2_out_1,
    main_GetGlobal_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[27]: x = 50, y = 438, inputs = 1, label = max
    // page group: minxmax
    //
max = main_GetGlobal_3_out_1;
    // 
    // node Receiver[19]: x = 300, y = 38, inputs = 1, label = max
    // page group: RenAutoColor
    //
main_Receiver_19_out_1[cache: 0] = max;
    // 
    // node AutoColor[1]: x = 100, y = 238, inputs = 10, label = AutoColor
    // input[7]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[8]: defaulting = 1, visible = 1, type = 5, value = NULL
    // page group: RenAutoColor
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Receiver_11_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_Receiver_18_out_1,
    main_Receiver_19_out_1,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[23]: x = 100, y = 88, inputs = 1, label = data
    // page group: IsoSurface
    //
main_Receiver_23_out_1[cache: 0] = data;
    // 
    // node Receiver[25]: x = 200, y = 38, inputs = 1, label = min
    // page group: IsoSurface
    //
main_Receiver_25_out_1[cache: 0] = min;
    // 
    // node Receiver[26]: x = 250, y = 38, inputs = 1, label = max
    // page group: IsoSurface
    //
main_Receiver_26_out_1[cache: 0] = max;
    // 
    // node AutoColor[3]: x = 100, y = 188, inputs = 10, label = AutoColor
    // input[8]: visible = 1
    // page group: IsoSurface
    //
main_AutoColor_3_out_1,
main_AutoColor_3_out_2 = 
    AutoColor(
    main_Receiver_23_out_1,
    main_AutoColor_3_in_2,
    main_AutoColor_3_in_3,
    main_AutoColor_3_in_4,
    main_AutoColor_3_in_5,
    main_AutoColor_3_in_6,
    main_Receiver_25_out_1,
    main_Receiver_26_out_1,
    main_AutoColor_3_in_9,
    main_AutoColor_3_in_10
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[30]: x = 50, y = 38, inputs = 1, label = data
    // page group: slab_extract
    //
main_Receiver_30_out_1[cache: 0] = data;
    // 
    // node Integer[2]: x = 400, y = 188, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 2 
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 2
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 2 
    // page group: slab_geo
    //
main_Integer_2_out_1[cache: 2] = 
    Integer(
    main_Integer_2_in_1,
    main_Integer_2_in_2,
    main_Integer_2_in_3,
    main_Integer_2_in_4,
    main_Integer_2_in_5,
    main_Integer_2_in_6,
    main_Integer_2_in_7,
    main_Integer_2_in_8,
    main_Integer_2_in_9,
    main_Integer_2_in_10,
    main_Integer_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[24]: x = 250, y = 438, inputs = 1, label = slab_dimension
    // page group: slab_geo
    //
slab_dimension = main_Integer_2_out_1;
    // 
    // node Receiver[31]: x = 100, y = 38, inputs = 1, label = slab_dimension
    // page group: slab_extract
    //
main_Receiver_31_out_1[cache: 0] = slab_dimension;
    // 
    // node Receiver[32]: x = 100, y = 38, inputs = 1, label = data
    // page group: slab_geo
    //
main_Receiver_32_out_1[cache: 0] = data;
    // 
    // node Inquire[2]: x = 100, y = 188, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "connection gridcounts"
    // input[3]: visible = 0
    // page group: slab_geo
    //
main_Inquire_2_out_1 = 
    Inquire(
    main_Receiver_32_out_1,
    main_Inquire_2_in_2,
    main_Inquire_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Compute[6]: x = 250, y = 238, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0, $1)-1"
    // page group: slab_geo
    // expression: value = select(a, b)-1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Inquire_2_out_1,
    main_Integer_2_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Integer[5]: x = 100, y = 338, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_5"
    // input[2]: defaulting = 1, visible = 0, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 10 
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 1, type = 1, value = 39
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "0"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 10 
    // page group: slab_geo
    //
main_Integer_5_out_1[cache: 2] = 
    Integer(
    main_Integer_5_in_1,
    main_Integer_5_in_2,
    main_Integer_5_in_3,
    main_Integer_5_in_4,
    main_Integer_5_in_5,
    main_Compute_6_out_1,
    main_Integer_5_in_7,
    main_Integer_5_in_8,
    main_Integer_5_in_9,
    main_Integer_5_in_10,
    main_Integer_5_in_11
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[25]: x = 100, y = 438, inputs = 1, label = slab_position
    // page group: slab_geo
    //
slab_position = main_Integer_5_out_1;
    // 
    // node Receiver[33]: x = 250, y = 38, inputs = 1, label = slab_position
    // page group: slab_extract
    //
main_Receiver_33_out_1[cache: 0] = slab_position;
    // 
    // node Slab[1]: x = 150, y = 188, inputs = 4, label = Slab
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 0
    // page group: slab_extract
    //
main_Slab_1_out_1 = 
    Slab(
    main_Receiver_30_out_1,
    main_Receiver_31_out_1,
    main_Receiver_33_out_1,
    main_Slab_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[26]: x = 150, y = 338, inputs = 1, label = slab_data
    // page group: slab_extract
    //
slab_data = main_Slab_1_out_1;
    // 
    // node Receiver[29]: x = 100, y = 38, inputs = 1, label = slab_data
    // page group: slab_viz
    //
main_Receiver_29_out_1[cache: 0] = slab_data;
    // 
    // node Scalar[5]: x = 350, y = 288, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.9 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.9 
    // page group: slab_viz
    //
    // 
    // node Scalar[2]: x = 250, y = 288, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: slab_viz
    //
    // 
    // node AutoColor[5]: x = 150, y = 338, inputs = 10, label = AutoColor
    // input[2]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[6]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[7]: visible = 0
    // output[2]: visible = 0
    // page group: slab_viz
    //
main_AutoColor_5_out_1,
main_AutoColor_5_out_2 = 
    AutoColor(
    main_Receiver_29_out_1,
    main_Scalar_5_out_1,
    main_AutoColor_5_in_3,
    main_AutoColor_5_in_4,
    main_AutoColor_5_in_5,
    main_Scalar_2_out_1,
    main_AutoColor_5_in_7,
    main_AutoColor_5_in_8,
    main_AutoColor_5_in_9,
    main_AutoColor_5_in_10
    ) [instance: 5, cache: 1];
    // 
    // node AutoColor[6]: x = 800, y = 338, inputs = 10, label = AutoColor
    // input[7]: visible = 0
    // output[2]: visible = 0
    // page group: slab_viz
    //
main_AutoColor_6_out_1,
main_AutoColor_6_out_2 = 
    AutoColor(
    main_Receiver_29_out_1,
    main_AutoColor_6_in_2,
    main_AutoColor_6_in_3,
    main_AutoColor_6_in_4,
    main_AutoColor_6_in_5,
    main_AutoColor_6_in_6,
    main_AutoColor_6_in_7,
    main_AutoColor_6_in_8,
    main_AutoColor_6_in_9,
    main_AutoColor_6_in_10
    ) [instance: 6, cache: 1];
    // 
    // node Integer[4]: x = 450, y = 38, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_4"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 10 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 64
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 10 
    // page group: slab_viz
    //
    // 
    // node Compute[11]: x = 350, y = 138, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($0>0)+1"
    // input[3]: visible = 0
    // page group: slab_viz
    // expression: value = (a>0)+1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_11_out_1 = 
    Compute(
    main_Compute_11_in_1,
    main_Integer_4_out_1,
    main_Compute_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Compute[10]: x = 500, y = 138, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max($0,1)"
    // input[3]: visible = 0
    // page group: slab_viz
    // expression: value = max(a,1)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_10_out_1 = 
    Compute(
    main_Compute_10_in_1,
    main_Integer_4_out_1,
    main_Compute_10_in_3
    ) [instance: 10, cache: 1];
    // 
    // node Isosurface[4]: x = 550, y = 288, inputs = 6, label = Isosurface
    // input[2]: visible = 0
    // page group: slab_viz
    //
main_Isosurface_4_out_1 = 
    Isosurface(
    main_Receiver_29_out_1,
    main_Isosurface_4_in_2,
    main_Compute_10_out_1,
    main_Isosurface_4_in_4,
    main_Isosurface_4_in_5,
    main_Isosurface_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node Route[5]: x = 600, y = 438, inputs = 2, outputs = 2, label = Route
    // output[1]: visible = 0
    // page group: slab_viz
    //
main_Route_5_out_1,
main_Route_5_out_2 = 
    Route(
    main_Compute_11_out_1,
    main_Isosurface_4_out_1
    ) [instance: 5, cache: 1];
    // 
    // node AutoColor[8]: x = 550, y = 588, inputs = 10, label = AutoColor
    // input[7]: visible = 0
    // output[2]: visible = 0
    // page group: slab_viz
    //
main_AutoColor_8_out_1,
main_AutoColor_8_out_2 = 
    AutoColor(
    main_Route_5_out_2,
    main_AutoColor_8_in_2,
    main_AutoColor_8_in_3,
    main_AutoColor_8_in_4,
    main_AutoColor_8_in_5,
    main_AutoColor_8_in_6,
    main_AutoColor_8_in_7,
    main_AutoColor_8_in_8,
    main_AutoColor_8_in_9,
    main_AutoColor_8_in_10
    ) [instance: 8, cache: 1];
    // 
    // node Scalar[4]: x = 250, y = 388, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.58 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.01
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 10.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.58 
    // page group: slab_viz
    //
    // 
    // node RubberSheet[1]: x = 100, y = 488, inputs = 4, label = RubberSheet
    // page group: slab_viz
    //
main_RubberSheet_1_out_1 = 
    RubberSheet(
    main_AutoColor_5_out_1,
    main_Scalar_4_out_1,
    main_RubberSheet_1_in_3,
    main_RubberSheet_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[3]: x = 250, y = 488, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.001 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.001
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.001 
    // page group: slab_viz
    //
    // 
    // node Integer[3]: x = 300, y = 488, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_3"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 7 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 15
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 7 
    // page group: slab_viz
    //
    // 
    // node Shade[1]: x = 200, y = 588, inputs = 8, label = Shade
    // input[2]: visible = 0
    // input[3]: visible = 0
    // input[4]: visible = 1
    // input[5]: visible = 1
    // page group: slab_viz
    //
main_Shade_1_out_1 = 
    Shade(
    main_RubberSheet_1_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Scalar_3_out_1,
    main_Integer_3_out_1,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Isosurface[3]: x = 400, y = 288, inputs = 6, label = Isosurface
    // input[2]: visible = 0
    // page group: slab_viz
    //
main_Isosurface_3_out_1 = 
    Isosurface(
    main_RubberSheet_1_out_1,
    main_Isosurface_3_in_2,
    main_Compute_10_out_1,
    main_Isosurface_3_in_4,
    main_Isosurface_3_in_5,
    main_Isosurface_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Route[4]: x = 350, y = 388, inputs = 2, outputs = 2, label = Route
    // output[1]: visible = 0
    // page group: slab_viz
    //
main_Route_4_out_1,
main_Route_4_out_2 = 
    Route(
    main_Compute_11_out_1,
    main_Isosurface_3_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Selector[4]: x = 650, y = 338, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_4"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "forest green" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 0, type = 16777248, value = { "black" "magenta" "forest green" "white" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 0 0 0 }
    // output[1]: visible = 0, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "forest green" 
    // page group: slab_viz
    //
    // 
    // node Color[2]: x = 400, y = 488, inputs = 5, label = Color
    // input[3]: visible = 0
    // page group: slab_viz
    //
main_Color_2_out_1 = 
    Color(
    main_Route_4_out_2,
    main_Selector_4_out_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Collect[1]: x = 250, y = 738, inputs = 3, label = Collect
    // input[3]: visible = 0
    // page group: slab_viz
    //
main_Collect_1_out_1 = 
    Collect(
    main_Shade_1_out_1,
    main_Color_2_out_1,
    main_Collect_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[15]: x = 50, y = 38, inputs = 1, label = caption
    // page group: image
    //
main_Receiver_15_out_1[cache: 0] = caption;
    // 
    // node Selector[1]: x = 50, y = 138, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Isolines" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 6 
    // input[4]: defaulting = 1, visible = 0, type = 16777248, value = { "VolumeRend colormap editor" "VolumeRend AutoColor" "VolumeRend Isosurface" "Isosurface" "Height field" "Isolines" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 3 4 5 6 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 6 
    // output[2]: visible = 0, type = 32, value = "Isolines" 
    // page group: choice
    //
    // 
    // node Receiver[7]: x = 100, y = 0, inputs = 1, label = data
    // page group: RenColor
    //
main_Receiver_7_out_1[cache: 0] = data;
    // 
    // node Receiver[16]: x = 200, y = 0, inputs = 1, label = min
    // page group: RenColor
    //
main_Receiver_16_out_1[cache: 0] = min;
    // 
    // node Receiver[17]: x = 250, y = 0, inputs = 1, label = max
    // page group: RenColor
    //
main_Receiver_17_out_1[cache: 0] = max;
    // 
    // node Colormap[2]: x = 150, y = 88, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [0.041666667 0.36842105] [0.125 0.10526316] [0.29166667 0.0] [0.50961538 0.0] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = -0.28879088
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 0.070537373
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[10]: visible = 0
    // input[11]: visible = 0
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -0.28879088 0.070537373 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = -0.28879088
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 0.070537373
    // page group: RenColor
    // window: position = (0.0843,0.4495), size = 0.5079x0.4400
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Receiver_7_out_1,
    main_Receiver_16_out_1,
    main_Receiver_17_out_1,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node Color[4]: x = 50, y = 288, inputs = 5, label = Color
    // page group: RenColor
    //
main_Color_4_out_1 = 
    Color(
    main_Receiver_7_out_1,
    main_Colormap_2_out_1,
    main_Colormap_2_out_2,
    main_Color_4_in_4,
    main_Color_4_in_5
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[7]: x = 50, y = 438, inputs = 1, label = color_using_Color
    // page group: RenColor
    //
color_using_Color = main_Color_4_out_1;
    // 
    // node Receiver[8]: x = 50, y = 38, inputs = 1, label = color_using_Color
    // page group: choice
    //
main_Receiver_8_out_1[cache: 0] = color_using_Color;
    // 
    // node Transmitter[8]: x = 0, y = 388, inputs = 1, label = color_using_AutoColor
    // page group: RenAutoColor
    //
color_using_AutoColor = main_AutoColor_1_out_1;
    // 
    // node Receiver[9]: x = 200, y = 38, inputs = 1, label = color_using_AutoColor
    // page group: choice
    //
main_Receiver_9_out_1[cache: 0] = color_using_AutoColor;
    // 
    // node Scalar[1]: x = 250, y = 188, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 1, type = 5, value = -0.12036695
    // input[6]: defaulting = 1, visible = 1, type = 5, value = 0.078821488
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 3
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: IsoSurface
    //
main_Scalar_1_out_1[cache: 2] = 
    Scalar(
    main_Scalar_1_in_1,
    main_Scalar_1_in_2,
    main_Scalar_1_in_3,
    main_Scalar_1_in_4,
    main_Receiver_25_out_1,
    main_Receiver_26_out_1,
    main_Scalar_1_in_7,
    main_Scalar_1_in_8,
    main_Scalar_1_in_9,
    main_Scalar_1_in_10,
    main_Scalar_1_in_11
    ) [instance: 1, cache: 1];
    // 
    // node Isosurface[1]: x = 100, y = 338, inputs = 6, label = Isosurface
    // input[3]: visible = 0
    // page group: IsoSurface
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_AutoColor_3_out_1,
    main_Scalar_1_out_1,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[15]: x = 100, y = 438, inputs = 1, label = iso_viz
    // page group: IsoSurface
    //
iso_viz = main_Isosurface_1_out_1;
    // 
    // node Receiver[24]: x = 400, y = 38, inputs = 1, label = iso_viz
    // page group: choice
    //
main_Receiver_24_out_1[cache: 0] = iso_viz;
    // 
    // node Collect[4]: x = 250, y = 138, inputs = 2, label = Collect
    // page group: choice
    //
main_Collect_4_out_1 = 
    Collect(
    main_Receiver_9_out_1,
    main_Receiver_24_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[21]: x = 250, y = 838, inputs = 1, label = rubber_viz
    // page group: slab_viz
    //
rubber_viz = main_Collect_1_out_1;
    // 
    // node Receiver[34]: x = 500, y = 38, inputs = 1, label = rubber_viz
    // page group: choice
    //
main_Receiver_34_out_1[cache: 0] = rubber_viz;
    // 
    // node Color[1]: x = 650, y = 588, inputs = 5, label = Color
    // input[3]: visible = 0
    // page group: slab_viz
    //
main_Color_1_out_1 = 
    Color(
    main_Route_5_out_2,
    main_Selector_4_out_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[3]: x = 750, y = 738, inputs = 2, label = Collect
    // page group: slab_viz
    //
main_Collect_3_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_AutoColor_6_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[22]: x = 750, y = 838, inputs = 1, label = surface_viz
    // page group: slab_viz
    //
surface_viz = main_Collect_3_out_1;
    // 
    // node Receiver[35]: x = 500, y = 288, inputs = 1, label = surface_viz
    // page group: choice
    //
main_Receiver_35_out_1[cache: 0] = surface_viz;
    // 
    // node Switch[1]: x = 100, y = 338, inputs = 7, label = Switch
    // page group: choice
    //
main_Switch_1_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Receiver_8_out_1,
    main_Receiver_9_out_1,
    main_Collect_4_out_1,
    main_Receiver_24_out_1,
    main_Receiver_34_out_1,
    main_Receiver_35_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[11]: x = 250, y = 438, inputs = 1, label = choice
    // page group: choice
    //
choice = main_Switch_1_out_1;
    // 
    // node Receiver[14]: x = 200, y = 38, inputs = 1, label = choice
    // page group: image
    //
main_Receiver_14_out_1[cache: 0] = choice;
    // 
    // node ShowBox[1]: x = 100, y = 288, inputs = 1, label = ShowBox
    // output[2]: visible = 0
    // page group: import
    //
main_ShowBox_1_out_1,
main_ShowBox_1_out_2 = 
    ShowBox(
    main_Reduce_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Color[3]: x = 100, y = 388, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "cadet blue"
    // input[3]: visible = 0
    // page group: import
    //
main_Color_3_out_1 = 
    Color(
    main_ShowBox_1_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[2]: x = 150, y = 488, inputs = 1, label = box
    // page group: import
    //
box = main_Color_3_out_1;
    // 
    // node Receiver[1]: x = 350, y = 38, inputs = 1, label = box
    // page group: image
    //
main_Receiver_1_out_1[cache: 0] = box;
    // 
    // node Transmitter[1]: x = 0, y = 438, inputs = 1, label = switch_setting
    // page group: choice
    //
switch_setting = main_Selector_1_out_1;
    // 
    // node Receiver[2]: x = 50, y = 88, inputs = 1, label = switch_setting
    // page group: colorbar
    //
main_Receiver_2_out_1[cache: 0] = switch_setting;
    // 
    // node Transmitter[3]: x = 200, y = 438, inputs = 1, label = color_map
    // page group: RenColor
    //
color_map = main_Colormap_2_out_1;
    // 
    // node Receiver[3]: x = 200, y = 38, inputs = 1, label = color_map
    // page group: colorbar
    //
main_Receiver_3_out_1[cache: 0] = color_map;
    // 
    // node Transmitter[4]: x = 200, y = 388, inputs = 1, label = color_auto
    // page group: RenAutoColor
    //
color_auto = main_AutoColor_1_out_2;
    // 
    // node Receiver[4]: x = 300, y = 38, inputs = 1, label = color_auto
    // page group: colorbar
    //
main_Receiver_4_out_1[cache: 0] = color_auto;
    // 
    // node Transmitter[17]: x = 250, y = 438, inputs = 1, label = color_iso
    // page group: IsoSurface
    //
color_iso = main_AutoColor_3_out_2;
    // 
    // node Receiver[27]: x = 500, y = 38, inputs = 1, label = color_iso
    // page group: colorbar
    //
main_Receiver_27_out_1[cache: 0] = color_iso;
    // 
    // node Switch[2]: x = 200, y = 238, inputs = 7, label = Switch--passes through the colormap used to color the volume (as the same selector controls this switch)
    // page group: colorbar
    //
main_Switch_2_out_1 = 
    Switch(
    main_Receiver_2_out_1,
    main_Receiver_3_out_1,
    main_Receiver_4_out_1,
    main_Receiver_27_out_1,
    main_Receiver_27_out_1,
    main_Receiver_27_out_1,
    main_Receiver_27_out_1
    ) [instance: 2, cache: 1];
    // 
    // node ColorBar[1]: x = 250, y = 338, inputs = 16, label = ColorBar
    // input[2]: visible = 0
    // input[3]: visible = 0
    // input[4]: visible = 0
    // input[8]: visible = 0
    // page group: colorbar
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Switch_2_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[10]: x = 250, y = 438, inputs = 1, label = colorbar
    // page group: colorbar
    //
colorbar = main_ColorBar_1_out_1;
    // 
    // node Receiver[13]: x = 250, y = 38, inputs = 1, label = colorbar
    // page group: image
    //
main_Receiver_13_out_1[cache: 0] = colorbar;
    // 
    // node Collect[2]: x = 100, y = 188, inputs = 4, label = Collect
    // page group: image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_15_out_1,
    main_Receiver_14_out_1,
    main_Receiver_1_out_1,
    main_Receiver_13_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Image[2]: x = 150, y = 288, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0 0 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-3.35757 -1.71256 1.92874]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.26896
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 536
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.775
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.554247 0.789406 -0.263909]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: image
    // depth: value = 16
    // window: position = (0.5621,0.4638), size = 0.3929x0.4352
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_2_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Inquire[4]: x = 100, y = 238, inputs = 3, label = Inquire
    // input[2]: visible = 0
    // input[3]: visible = 0
    // page group: minxmax
    //
main_Inquire_4_out_1 = 
    Inquire(
    main_GetGlobal_3_out_1,
    main_Inquire_4_in_2,
    main_Inquire_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Inquire[5]: x = 400, y = 238, inputs = 3, label = Inquire
    // input[2]: visible = 0
    // input[3]: visible = 0
    // page group: minxmax
    //
main_Inquire_5_out_1 = 
    Inquire(
    main_GetGlobal_4_out_1,
    main_Inquire_5_in_2,
    main_Inquire_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Statistics[1]: x = 250, y = 288, inputs = 1, label = Statistics
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: import
    //
main_Statistics_1_out_1,
main_Statistics_1_out_2,
main_Statistics_1_out_3,
main_Statistics_1_out_4,
main_Statistics_1_out_5 = 
    Statistics(
    main_Statistics_1_in_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[29]: x = 250, y = 488, inputs = 1, label = tmin
    // page group: import
    //
tmin = main_Statistics_1_out_4;
    // 
    // node Receiver[37]: x = 500, y = 238, inputs = 1, label = tmin
    // page group: minxmax
    //
main_Receiver_37_out_1[cache: 0] = tmin;
    // 
    // node Transmitter[30]: x = 300, y = 488, inputs = 1, label = tmax
    // page group: import
    //
tmax = main_Statistics_1_out_5;
    // 
    // node Receiver[38]: x = 200, y = 238, inputs = 1, label = tmax
    // page group: minxmax
    //
main_Receiver_38_out_1[cache: 0] = tmax;
    // 
    // node Route[7]: x = 150, y = 338, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: minxmax
    //
main_Route_7_out_1,
main_Route_7_out_2 = 
    Route(
    main_Inquire_4_out_1,
    main_Receiver_38_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Route[8]: x = 450, y = 338, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: minxmax
    //
main_Route_8_out_1,
main_Route_8_out_2 = 
    Route(
    main_Inquire_5_out_1,
    main_Receiver_37_out_1
    ) [instance: 8, cache: 1];
    // 
    // node SetGlobal[3]: x = 200, y = 438, inputs = 3, label = SetGlobal
    // page group: minxmax
    //
    SetGlobal(
    main_Route_7_out_1,
    main_GetGlobal_3_out_2,
    main_SetGlobal_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node SetGlobal[4]: x = 500, y = 438, inputs = 3, label = SetGlobal
    // page group: minxmax
    //
    SetGlobal(
    main_Route_8_out_1,
    main_GetGlobal_4_out_2,
    main_SetGlobal_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[23]: x = 550, y = 838, inputs = 1, label = isoline_viz
    // page group: slab_viz
    //
isoline_viz = main_AutoColor_8_out_1;
    //
    // decorator Annotate	pos=(250,222) size=431x28 style(Label), value = <NULL>
    // annotation user_begin: 59
    // annotation user: color the data using a colormap editor and the Color module
    // annotation user_end: <NULL>
    // page group: RenColor
    //
    // decorator Annotate	pos=(200,222) size=368x28 style(Label), value = <NULL>
    // annotation user_begin: 51
    // annotation user: color the data using AutoColor and default settings
    // annotation user_end: <NULL>
    // page group: RenAutoColor
    //
    // decorator Annotate	pos=(400,222) size=280x28 style(Label), value = <NULL>
    // annotation user_begin: 36
    // annotation user: make a colorbar using the chosen map
    // annotation user_end: <NULL>
    // page group: colorbar
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_String_1_out_1 = "localhost:8000";
main_ImportHDF5_2_in_2 = NULL;
main_ImportHDF5_2_in_3 = NULL;
main_ImportHDF5_2_in_4 = NULL;
main_ImportHDF5_2_in_5 = NULL;
main_ImportHDF5_2_in_6 = 1;
main_ImportHDF5_2_in_7 = NULL;
main_ImportHDF5_2_in_8 = NULL;
main_ImportHDF5_2_in_9 = NULL;
main_ImportHDF5_2_in_10 = NULL;
main_ImportHDF5_2_in_11 = NULL;
main_ImportHDF5_2_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 1 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 1 ;
main_Reduce_1_out_1 = NULL;
main_Transmitter_6_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Reset_2_in_1 = "main_Reset_2_out_1";
main_Reset_2_in_2 = 0;
main_Reset_2_in_3 = 0;
main_Reset_2_in_4 = NULL;
main_Reset_2_in_5 = NULL;
main_Reset_2_in_6 = NULL;
main_Reset_2_out_1 = 0;
main_GetGlobal_4_in_1 = NULL;
main_GetGlobal_4_in_3 = NULL;
main_GetGlobal_4_out_1 = NULL;
main_GetGlobal_4_out_2 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_18_out_1 = NULL;
main_GetGlobal_3_in_1 = NULL;
main_GetGlobal_3_in_3 = NULL;
main_GetGlobal_3_out_1 = NULL;
main_GetGlobal_3_out_2 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_19_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_AutoColor_1_out_2 = NULL;
main_Receiver_23_out_1 = NULL;
main_Receiver_25_out_1 = NULL;
main_Receiver_26_out_1 = NULL;
main_AutoColor_3_in_2 = NULL;
main_AutoColor_3_in_3 = NULL;
main_AutoColor_3_in_4 = NULL;
main_AutoColor_3_in_5 = NULL;
main_AutoColor_3_in_6 = NULL;
main_AutoColor_3_in_9 = NULL;
main_AutoColor_3_in_10 = NULL;
main_AutoColor_3_out_1 = NULL;
main_AutoColor_3_out_2 = NULL;
main_Receiver_30_out_1 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 2 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = 0;
main_Integer_2_in_6 = 2;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 2 ;
main_Transmitter_24_out_1 = NULL;
main_Receiver_31_out_1 = NULL;
main_Receiver_32_out_1 = NULL;
main_Inquire_2_in_2 = "connection gridcounts";
main_Inquire_2_in_3 = NULL;
main_Inquire_2_out_1 = NULL;
main_Compute_6_in_1 = "select($0, $1)-1";
main_Compute_6_out_1 = NULL;
main_Integer_5_in_1 = "Integer_5";
main_Integer_5_in_2 = NULL;
main_Integer_5_in_3 = 10 ;
main_Integer_5_in_4 = NULL;
main_Integer_5_in_5 = 0;
main_Integer_5_in_7 = NULL;
main_Integer_5_in_8 = NULL;
main_Integer_5_in_9 = NULL;
main_Integer_5_in_10 = NULL;
main_Integer_5_in_11 = NULL;
main_Integer_5_out_1 = 10 ;
main_Transmitter_25_out_1 = NULL;
main_Receiver_33_out_1 = NULL;
main_Slab_1_in_4 = 0;
main_Slab_1_out_1 = NULL;
main_Transmitter_26_out_1 = NULL;
main_Receiver_29_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.9 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 0.9 ;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 1.0 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 1.0 ;
main_AutoColor_5_in_3 = NULL;
main_AutoColor_5_in_4 = NULL;
main_AutoColor_5_in_5 = NULL;
main_AutoColor_5_in_7 = NULL;
main_AutoColor_5_in_8 = NULL;
main_AutoColor_5_in_9 = NULL;
main_AutoColor_5_in_10 = NULL;
main_AutoColor_5_out_1 = NULL;
main_AutoColor_6_in_2 = NULL;
main_AutoColor_6_in_3 = NULL;
main_AutoColor_6_in_4 = NULL;
main_AutoColor_6_in_5 = NULL;
main_AutoColor_6_in_6 = NULL;
main_AutoColor_6_in_7 = NULL;
main_AutoColor_6_in_8 = NULL;
main_AutoColor_6_in_9 = NULL;
main_AutoColor_6_in_10 = NULL;
main_AutoColor_6_out_1 = NULL;
main_Integer_4_in_1 = "Integer_4";
main_Integer_4_in_2 = NULL;
main_Integer_4_in_3 = 10 ;
main_Integer_4_in_4 = NULL;
main_Integer_4_in_5 = NULL;
main_Integer_4_in_6 = NULL;
main_Integer_4_in_7 = NULL;
main_Integer_4_in_8 = NULL;
main_Integer_4_in_9 = NULL;
main_Integer_4_in_10 = NULL;
main_Integer_4_in_11 = NULL;
main_Integer_4_out_1 = 10 ;
main_Compute_11_in_1 = "($0>0)+1";
main_Compute_11_in_3 = NULL;
main_Compute_11_out_1 = NULL;
main_Compute_10_in_1 = "max($0,1)";
main_Compute_10_in_3 = NULL;
main_Compute_10_out_1 = NULL;
main_Isosurface_4_in_2 = NULL;
main_Isosurface_4_in_4 = NULL;
main_Isosurface_4_in_5 = NULL;
main_Isosurface_4_in_6 = NULL;
main_Isosurface_4_out_1 = NULL;
main_Route_5_out_2 = NULL;
main_AutoColor_8_in_2 = NULL;
main_AutoColor_8_in_3 = NULL;
main_AutoColor_8_in_4 = NULL;
main_AutoColor_8_in_5 = NULL;
main_AutoColor_8_in_6 = NULL;
main_AutoColor_8_in_7 = NULL;
main_AutoColor_8_in_8 = NULL;
main_AutoColor_8_in_9 = NULL;
main_AutoColor_8_in_10 = NULL;
main_AutoColor_8_out_1 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 1.58 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = 1.58 ;
main_RubberSheet_1_in_3 = NULL;
main_RubberSheet_1_in_4 = NULL;
main_RubberSheet_1_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.001 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 0.001 ;
main_Integer_3_in_1 = "Integer_3";
main_Integer_3_in_2 = NULL;
main_Integer_3_in_3 = 7 ;
main_Integer_3_in_4 = NULL;
main_Integer_3_in_5 = NULL;
main_Integer_3_in_6 = NULL;
main_Integer_3_in_7 = NULL;
main_Integer_3_in_8 = NULL;
main_Integer_3_in_9 = NULL;
main_Integer_3_in_10 = NULL;
main_Integer_3_in_11 = NULL;
main_Integer_3_out_1 = 7 ;
main_Shade_1_in_2 = NULL;
main_Shade_1_in_3 = NULL;
main_Shade_1_in_6 = NULL;
main_Shade_1_in_7 = NULL;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
main_Isosurface_3_in_2 = NULL;
main_Isosurface_3_in_4 = NULL;
main_Isosurface_3_in_5 = NULL;
main_Isosurface_3_in_6 = NULL;
main_Isosurface_3_out_1 = NULL;
main_Route_4_out_2 = NULL;
main_Selector_4_in_1 = "Selector_4";
main_Selector_4_in_2 = "forest green" ;
main_Selector_4_in_3 = 0 ;
main_Selector_4_in_4 = NULL;
main_Selector_4_in_5 = NULL;
main_Selector_4_in_6 = NULL;
main_Selector_4_in_7 = NULL;
main_Selector_4_out_2 = "forest green" ;
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Collect_1_in_3 = NULL;
main_Collect_1_out_1 = NULL;
main_Receiver_15_in_1 = NULL;
main_Receiver_15_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "Isolines" ;
main_Selector_1_in_3 = 6 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 6 ;
main_Receiver_7_out_1 = NULL;
main_Receiver_16_out_1 = NULL;
main_Receiver_17_out_1 = NULL;
main_Colormap_2_in_1 = { [0.0 0.666667] [0.041666667 0.36842105] [0.125 0.10526316] [0.29166667 0.0] [0.50961538 0.0] [1.0 0.0] };
main_Colormap_2_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_9 = NULL;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { -0.28879088 0.070537373 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = -0.28879088;
main_Colormap_2_in_18 = 0.070537373;
main_Colormap_2_in_19 = NULL;
main_Colormap_2_out_1 = NULL;
main_Colormap_2_out_2 = NULL;
main_Color_4_in_4 = NULL;
main_Color_4_in_5 = NULL;
main_Color_4_out_1 = NULL;
main_Transmitter_7_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.0 ;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Transmitter_15_out_1 = NULL;
main_Receiver_24_out_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_34_out_1 = NULL;
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Transmitter_22_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_Switch_1_out_1 = NULL;
main_Transmitter_11_out_1 = NULL;
main_Receiver_14_out_1 = NULL;
main_ShowBox_1_out_1 = NULL;
main_Color_3_in_2 = "cadet blue";
main_Color_3_in_3 = NULL;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Transmitter_17_out_1 = NULL;
main_Receiver_27_out_1 = NULL;
main_Switch_2_out_1 = NULL;
main_ColorBar_1_in_2 = NULL;
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = NULL;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_13_out_1 = NULL;
main_Collect_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X16,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [0 0 0];
main_Image_2_in_6 = [-3.35757 -1.71256 1.92874];
main_Image_2_in_7 = 2.26896;
main_Image_2_in_8 = 536;
main_Image_2_in_9 = 0.775;
main_Image_2_in_10 = [-0.554247 0.789406 -0.263909];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Inquire_4_in_2 = NULL;
main_Inquire_4_in_3 = NULL;
main_Inquire_4_out_1 = NULL;
main_Inquire_5_in_2 = NULL;
main_Inquire_5_in_3 = NULL;
main_Inquire_5_out_1 = NULL;
main_Statistics_1_in_1 = NULL;
main_Statistics_1_out_4 = NULL;
main_Statistics_1_out_5 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_37_out_1 = NULL;
main_Transmitter_30_out_1 = NULL;
main_Receiver_38_out_1 = NULL;
main_Route_7_out_1 = NULL;
main_Route_8_out_1 = NULL;
main_SetGlobal_3_in_3 = NULL;
main_SetGlobal_4_in_3 = NULL;
Executive("product version 4 3 0");
$sync
main();
